git
1.分布式开发
集中式开发（eg.SVN)：改同一套服务器。之后本底不能进行版本控制。缺点：宕机影响很大
分布式开发：本地也有一套版本控制。即使宕机这段时间也没事。从远程库pr/push。

git命令：
1.git config--global user.name
2.                                     email(可以虚拟)

1.git init (给本地库初始化)
2.git.status(查看状态)
 	vim hello.txt(文件的打开和编辑)
	cat+文件（查看并不操作）
	yy复制 p粘贴 
	shift加：加wq（保存）  
3git.add(追踪添加到暂存区)  
4.git.commit -m(将暂存区送到本地库产生历史记录)
	-m作用是提交日志 
5.git.reflog/git.log(查看版本号版本信息)  
修改多次注意只有一个文件，不像创建多副本的形式。底层是通过指针控制的版本迭代

6.git.reset --hard +版本号（版本号穿梭）

7.git branch -v  查看分支
8.git branch +分支名 创建分支
9.git checked +分支名 切换分支

10. git merge +分支名 合并分支（站在此分支上，将写的分支合并到此分支上）
冲突合并：两份分支在同一个文件的同一个位置进行了修改，Git无法决定用哪一个，需要人为决定。报一个 both modified
比如在一版本时候branch出来一个分支，之后改了master也改了新分支，而且改的是同一个文件，那这两个就叫冲突了。
其实新建一个分支就是新建一个指针，当前在哪个分支上HEAD至真就指向那个分支指针

